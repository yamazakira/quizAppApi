generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "cockroachdb"
  url      = env("DATABASE_URL")
}



// model Todo {
//   id        String   @id @default(uuid())
//   body      String
//   completed Boolean  @default(false)
//   createdAt DateTime @default(now())
//   updatedAt DateTime @default(now()) @updatedAt

//   @@map("todos")
// }

model User {
  id        BigInt   @id @default(autoincrement())
  email     String   @unique
  password  String
  name      String
  createdAt DateTime @default(now())

  quizzes Quiz[]
  answers UserAnswer[]
}

model Quiz {
  id       BigInt   @id @default(autoincrement())
  title    String
  postedAt DateTime @default(now())
  userId   BigInt
  user     User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  questions Question[]
  answers   UserAnswer[]
}

model Question {
  id     BigInt @id @default(autoincrement())
  text   String
  quizId BigInt
  quiz   Quiz   @relation(fields: [quizId], references: [id], onDelete: Cascade)

  alternatives Alternative[]
  correctAltId BigInt        @unique
  correctAlt   Alternative?  @relation("CorrectAnswer", fields: [correctAltId], references: [id])
  UserAnswer   UserAnswer[]
}

model Alternative {
  id         BigInt   @id @default(autoincrement())
  text       String?
  imageUrl   String?
  questionId BigInt
  question   Question @relation(fields: [questionId], references: [id], onDelete: Cascade)

  correctFor Question?    @relation("CorrectAnswer")
  UserAnswer UserAnswer[]
}

model UserAnswer {
  id            BigInt @id @default(autoincrement())
  userId        BigInt
  quizId        BigInt
  questionId    BigInt
  selectedAltId BigInt

  user        User        @relation(fields: [userId], references: [id], onDelete: Cascade)
  quiz        Quiz        @relation(fields: [quizId], references: [id], onDelete: Cascade)
  question    Question    @relation(fields: [questionId], references: [id], onDelete: Cascade)
  selectedAlt Alternative @relation(fields: [selectedAltId], references: [id], onDelete: Cascade)

  createdAt DateTime @default(now())
}